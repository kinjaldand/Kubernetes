The Kubeflow Pipelines platform consists of:

    A UI for managing and tracking pipelines and their execution

    An engine for scheduling a pipeline’s execution

    An SDK for defining, building, and deploying pipelines in Python

    Notebook support for using the SDK and pipeline execution
    
For each container (when using the Python SDK), we must:

    Create the container—either as a simple Python function, or with any Docker container (read more in Chapter 9).

    Create an operation that references that container as well as the command line arguments, data mounts, and variable to pass the container.

    Sequence the operations, defining which may happen in parallel and which must complete before moving on to a further step.1

    Compile this pipeline, defined in Python, into a YAML file that Kubeflow Pipelines can consume.
    
Components:
    Argo: the Foundation of Pipelines
    
Executed on condition
Executed by schedule
Custom Containers
